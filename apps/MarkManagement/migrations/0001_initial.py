# Generated by Django 2.1.2 on 2019-01-13 17:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 't_Class',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClassInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=40, verbose_name='教学班信息')),
                ('semester', models.CharField(default='', max_length=20, verbose_name='学期')),
                ('week', models.CharField(default='', max_length=20, verbose_name='开课时间')),
                ('room', models.CharField(default='', max_length=200, verbose_name='教室')),
                ('cid', models.CharField(default='', max_length=40, verbose_name='课程代号')),
            ],
            options={
                'db_table': 't_ClassInfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=20)),
                ('shortname', models.CharField(default='', max_length=20)),
            ],
            options={
                'db_table': 't_College',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=40, verbose_name='课程名')),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.College', verbose_name='学院id')),
            ],
            options={
                'db_table': 't_Lesson',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=20, verbose_name='专业名称')),
                ('shortname', models.CharField(default='', max_length=10, verbose_name='专业昵称')),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.College', verbose_name='所在学院id')),
            ],
            options={
                'db_table': 't_Major',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pointNumber', models.IntegerField(default=0, verbose_name='分数')),
                ('date', models.DateTimeField(auto_now=True, null=True, verbose_name='时间戳')),
                ('note', models.CharField(default='', max_length=200)),
                ('classInfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.ClassInfo', verbose_name='分数的课程的id')),
            ],
            options={
                'db_table': 't_Point',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sid', models.CharField(default='', max_length=20, unique=True, verbose_name='学生学号')),
                ('name', models.CharField(default='', max_length=20, verbose_name='学生名')),
                ('year', models.CharField(default='', max_length=6, verbose_name='学生学年')),
                ('major', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.Major', verbose_name='专业id')),
            ],
            options={
                'db_table': 't_Student',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tid', models.CharField(default='', max_length=20, unique=True, verbose_name='教师工号')),
                ('password', models.CharField(default='', max_length=128, verbose_name='密码')),
                ('name', models.CharField(default='', max_length=20, verbose_name='用户姓名')),
                ('is_manager', models.BooleanField(default=False, max_length=1, verbose_name='管理员')),
                ('email', models.CharField(default='', max_length=40, verbose_name='邮箱')),
                ('mobile', models.CharField(default='', max_length=20, verbose_name='电话')),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.College', verbose_name='所属学院id')),
            ],
            options={
                'db_table': 't_Teacher',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=20, verbose_name='列名')),
                ('weight', models.IntegerField(default=0, verbose_name='权重')),
                ('classInfo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.ClassInfo', verbose_name='列的教学班id')),
            ],
            options={
                'db_table': 't_Title',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TitleGroup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=20, verbose_name='列的组名')),
                ('weight', models.IntegerField(default=0, verbose_name='权重')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.Lesson', verbose_name='类别所属课程组id')),
            ],
            options={
                'db_table': 't_TitleGroup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('token_text', models.CharField(default='', max_length=128, verbose_name='token')),
                ('create_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.Teacher', verbose_name='所属教师id')),
            ],
            options={
                'db_table': 't_Token',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=20, unique=True, verbose_name='学校名称')),
                ('shortname', models.CharField(default='', max_length=20, verbose_name='学校昵称')),
            ],
            options={
                'db_table': 't_University',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='title',
            name='titleGroup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.TitleGroup', verbose_name='列的组id'),
        ),
        migrations.AddField(
            model_name='point',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.Student', verbose_name='分数的学生id'),
        ),
        migrations.AddField(
            model_name='point',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='MarkManagement.Title', verbose_name='列id'),
        ),
        migrations.AddField(
            model_name='college',
            name='university',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.University', verbose_name='所在学校表主键'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='lesson',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.Lesson', verbose_name='所属课程组id'),
        ),
        migrations.AddField(
            model_name='classinfo',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.Teacher', verbose_name='教师表id'),
        ),
        migrations.AddField(
            model_name='class',
            name='classInfo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.ClassInfo', verbose_name='课程详细id'),
        ),
        migrations.AddField(
            model_name='class',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='MarkManagement.Student', verbose_name='学生id'),
        ),
        migrations.AlterUniqueTogether(
            name='titlegroup',
            unique_together={('name', 'lesson')},
        ),
        migrations.AlterUniqueTogether(
            name='title',
            unique_together={('titleGroup', 'name', 'classInfo')},
        ),
        migrations.AlterUniqueTogether(
            name='point',
            unique_together={('student', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='major',
            unique_together={('name', 'college')},
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('name', 'college')},
        ),
        migrations.AlterUniqueTogether(
            name='college',
            unique_together={('name', 'shortname')},
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('student', 'classInfo')},
        ),
    ]
